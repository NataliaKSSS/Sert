
#Область ПрограммныйИнтерфейс

// Возвращает полное имя основной формы объекта.
//
// Параметры:
//  Ссылка	 - 	ЛюбаяСсылка - ссылка на объект. Например, ДокументСсылка или СправочникСсылка.
// 
// Возвращаемое значение:
//  Строка - полное имя основной формы объекта.
//
Функция ПолноеИмяФормыОбъекта(Ссылка) Экспорт
	
	ИмяФормы = "";
	ОбъектМетаданных = Ссылка.Метаданные();
	
	Если ОбщегоНазначения.ЭтоДокумент(ОбъектМетаданных) Тогда
		ИмяФормы = ОбъектМетаданных.ПолноеИмя() + ".ФормаОбъекта";
	ИначеЕсли ОбщегоНазначения.ЭтоСправочник(ОбъектМетаданных) Тогда
		ИмяФормы = ОбъектМетаданных.Формы.ФормаЭлемента.ПолноеИмя();
	КонецЕсли;
		
	Возврат ИмяФормы;
	
КонецФункции

// Проверяет статус фонового задания по указанному идентификатору.
// 
// Параметры:
//  ИдентификаторЗадания - УникальныйИдентификатор - Идентификатор фонового задания.
// Возвращаемое значение: 
//  Структура - Содержит статусы проверяемого фонового задания.
Функция ПроверитьФоновоеЗадание(Знач ИдентификаторЗадания) Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("ОтмененоИлиНеНайдено", Ложь);
	Результат.Вставить("УспешноВыполнено", Ложь);
	Результат.Вставить("ЕщеВыполняется", Ложь);
	Результат.Вставить("ВыполненоСОшибками", Ложь);
	Результат.Вставить("ТекстОшибки", "");
	Результат.Вставить("Начало", "");
	Результат.Вставить("Конец", "");
	
	Отбор = Новый Структура();
	Отбор.Вставить("УникальныйИдентификатор", ИдентификаторЗадания);
	
	АктивныеЗадания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
	
	Если АктивныеЗадания.Количество() = 0 Тогда
		Результат.ОтмененоИлиНеНайдено = Истина;
	ИначеЕсли АктивныеЗадания[0].Состояние = СостояниеФоновогоЗадания.Активно Тогда
		Результат.ЕщеВыполняется = Истина;
	ИначеЕсли АктивныеЗадания[0].Состояние = СостояниеФоновогоЗадания.Завершено Тогда
		Результат.УспешноВыполнено = Истина;
		Результат.Начало = АктивныеЗадания[0].Начало;
		Результат.Конец = АктивныеЗадания[0].Конец;
	ИначеЕсли АктивныеЗадания[0].Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
		Результат.ВыполненоСОшибками = Истина;
		Результат.ТекстОшибки = ПодробноеПредставлениеОшибки(АктивныеЗадания[0].ИнформацияОбОшибке);
		Результат.Начало = АктивныеЗадания[0].Начало;
		Результат.Конец = АктивныеЗадания[0].Конец;
	ИначеЕсли АктивныеЗадания[0].Состояние = СостояниеФоновогоЗадания.Отменено Тогда
		Результат.ОтмененоИлиНеНайдено = Истина;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

// Возвращает значение функциональной опции по имени
//
// Параметры:
// 	Имя - Строка - Имя функциональной опции
// 
// Возвращаемое значение:
//	Произвольный - Значение функциональной опции
// 
Функция ЗначениеФункциональнойОпции(Имя) Экспорт
	Возврат ПолучитьФункциональнуюОпцию(Имя);	
КонецФункции

// Возвращает значение константы по имени
//
// Параметры:
// 	Имя - Строка - Имя константы
// 
// Возвращаемое значение:
//	Произвольный - Значение константы
// 
Функция ЗначениеКонстанты(Имя) Экспорт
	Возврат Константы[Имя].Получить();
КонецФункции

// Возвращает значение константы по имени
//
// Параметры:
// 	ИмяИлиИдентификаторДокумента - Строка -
// 					- СправочникСсылка.ИдентификаторыОбъектовМетаданных -
// 					- СправочникСсылка.ИдентификаторыОбъектовРасширений - Имя или идентификатор метаданных документа.
// 
// Возвращаемое значение:
//	Строка - Синоним документа
// 
Функция СинонимДокумента(ИмяИлиИдентификаторДокумента) Экспорт
	
	Результат = "";
	Если ТипЗнч(ИмяИлиИдентификаторДокумента) = Тип("Строка") Тогда
		ОбъектМетаданных = Метаданные.Документы[ИмяИлиИдентификаторДокумента];
	ИначеЕсли ТипЗнч(ИмяИлиИдентификаторДокумента) = Тип("СправочникСсылка.ИдентификаторыОбъектовМетаданных")
		ИЛИ ТипЗнч(ИмяИлиИдентификаторДокумента) = Тип("СправочникСсылка.ИдентификаторыОбъектовРасширений") Тогда
		ОбъектМетаданных = ОбщегоНазначения.ОбъектМетаданныхПоИдентификатору(ИмяИлиИдентификаторДокумента);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОбъектМетаданных.ПредставлениеОбъекта) Тогда
		Результат = ОбъектМетаданных.ПредставлениеОбъекта;
	Иначе
		Результат = ОбъектМетаданных.Синоним;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Возвращает признак того, что для пользователя установлен язык интерфейса
// соответствующий основному языку информационной базы.
//
// Возвращаемое значение:
//  Булево
//
Функция ЭтоОсновнойЯзык() Экспорт
	
	Возврат ОбщегоНазначения.ЭтоОсновнойЯзык();
	
КонецФункции


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РеквизитыОбъекта

// Возвращает структуру, содержащую значения реквизитов, прочитанные из информационной базы по ссылке на объект.
// Рекомендуется использовать вместо обращения к реквизитам объекта через точку от ссылки на объект
// для быстрого чтения отдельных реквизитов объекта из базы данных.
//
// Если необходимо зачитать реквизит независимо от прав текущего пользователя,
// то следует использовать предварительный переход в привилегированный режим.
//
// Параметры:
//  Ссылка    - ЛюбаяСсылка - объект, значения реквизитов которого необходимо получить.
//            - Строка      - полное имя предопределенного элемента, значения реквизитов которого необходимо получить.
//  Реквизиты - Строка - имена реквизитов, перечисленные через запятую, в формате
//                       требований к свойствам структуры.
//                       Например, "Код, Наименование, Родитель".
//            - Структура
//            - ФиксированнаяСтруктура - в качестве ключа передается
//                       псевдоним поля для возвращаемой структуры с результатом, а в качестве
//                       значения (опционально) фактическое имя поля в таблице.
//                       Если ключ задан, а значение не определено, то имя поля берется из ключа.
//                       Допускается указание имени поля через точку, но при этом параметр КодЯзыка для такого поля
//                       учитываться не будет.
//            - Массив
//            - ФиксированныйМассив - имена реквизитов в формате требований
//                       к свойствам структуры.
//  ВыбратьРазрешенные - Булево - если Истина, то запрос к объекту выполняется с учетом прав пользователя;
//                                если есть ограничение на уровне записей, то все реквизиты вернутся со 
//                                значением Неопределено; если нет прав для работы с таблицей, то возникнет исключение;
//                                если Ложь, то возникнет исключение при отсутствии прав на таблицу 
//                                или любой из реквизитов.
//  КодЯзыка - Строка - код языка для мультиязычного реквизита.
//
// Возвращаемое значение:
//  Структура - 
Функция ЗначенияРеквизитовОбъекта(Ссылка, Реквизиты) Экспорт
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, Реквизиты);
	
КонецФункции

// Устарел.
// Возвращает значения реквизита, прочитанного из информационной базы по ссылке на объект.
// Рекомендуется использовать вместо обращения к реквизитам объекта через точку от ссылки на объект
// для быстрого чтения отдельных реквизитов объекта из базы данных.
//
// Если необходимо зачитать реквизит независимо от прав текущего пользователя,
// то следует использовать предварительный переход в привилегированный режим.
//
// Параметры:
//  Ссылка    - ЛюбаяСсылка - объект, значения реквизитов которого необходимо получить.
//            - Строка      - полное имя предопределенного элемента, значения реквизитов которого необходимо получить.
//  ИмяРеквизита       - Строка - имя получаемого реквизита.
//                                Допускается указание имени реквизита через точку, но при этом параметр КодЯзыка для
//                                такого реквизита учитываться не будет.
//  ВыбратьРазрешенные - Булево - если Истина, то запрос к объекту выполняется с учетом прав пользователя;
//                                если есть ограничение на уровне записей, то возвращается Неопределено;
//                                если нет прав для работы с таблицей, то возникнет исключение;
//                                если Ложь, то возникнет исключение при отсутствии прав на таблицу
//                                или любой из реквизитов.
//  КодЯзыка - Строка - код языка для мультиязычного реквизита.
//
// Возвращаемое значение:
//  Произвольный - 
Функция ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита) Экспорт
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита);
	
КонецФункции

// Устарел.
// Возвращает значения реквизитов, прочитанные из информационной базы для нескольких объектов.
// Рекомендуется использовать вместо обращения к реквизитам объекта через точку от ссылки на объект
// для быстрого чтения отдельных реквизитов объекта из базы данных.
//
// Если необходимо зачитать реквизит независимо от прав текущего пользователя,
// то следует использовать предварительный переход в привилегированный режим.
//
// Параметры:
//  МассивСсылок - Массив
//         - ФиксированныйМассив - ссылки на объекты.
//                    Если массив пуст, то результатом будет пустое соответствие.
//  ИменаРеквизитов - Строка - имена реквизитов перечисленные через запятую, в формате требований к свойствам
//                       структуры. Например, "Код, Наименование, Родитель".
//            - Массив
//            - ФиксированныйМассив - имена реквизитов в формате требований
//                       к свойствам структуры.
//  ВыбратьРазрешенные - Булево - если Истина, то запрос к объектам выполняется с учетом прав пользователя;
//                                если какой-либо объект будет исключен из выборки по правам, то этот объект
//                                будет исключен и из результата;
//                                если Ложь, то возникнет исключение при отсутствии прав на таблицу
//                                или любой из реквизитов.
//  КодЯзыка - Строка - код языка для мультиязычного реквизита.
//
// Возвращаемое значение:
//  Соответствие из КлючИЗначение - список объектов и значений их реквизитов:
//   * Ключ - ЛюбаяСсылка - ссылка на объект;
//   * Значение - Структура:
//    ** Ключ - Строка - имя реквизита;
//    ** Значение - Произвольный - значение реквизита.
// 
Функция ЗначенияРеквизитовОбъектов(МассивСсылок, ИменаРеквизитов, ВыбратьРазрешенные = Ложь) Экспорт
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъектов(МассивСсылок, ИменаРеквизитов, ВыбратьРазрешенные);
	
КонецФункции

// Устарел.
// Возвращает значения реквизита, прочитанного из информационной базы для нескольких объектов.
// Рекомендуется использовать вместо обращения к реквизитам объекта через точку от ссылки на объект
// для быстрого чтения отдельных реквизитов объекта из базы данных.
//
// Если необходимо зачитать реквизит независимо от прав текущего пользователя,
// то следует использовать предварительный переход в привилегированный режим.
//
// Параметры:
//  МассивСсылок       - Массив - массив ссылок на объекты.
//  ИмяРеквизита       - Строка - например, "Код".
//  ВыбратьРазрешенные - Булево - если Истина, то запрос к объектам выполняется с учетом прав пользователя;
//                                если какой-либо объект будет исключен из выборки по правам, то этот объект
//                                будет исключен и из результата;
//                                если Ложь, то возникнет исключение при отсутствии прав на таблицу
//                                или любой из реквизитов.
//  КодЯзыка - Строка - код языка для мультиязычного реквизита.
//
// Возвращаемое значение:
//  Соответствие -
// 
Функция ЗначениеРеквизитаОбъектов(МассивСсылок, ИмяРеквизита, ВыбратьРазрешенные = Ложь) Экспорт
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивСсылок, ИмяРеквизита, ВыбратьРазрешенные);
	
КонецФункции

// Возвращает значения реквизита, прочитанного из информационной базы по ссылке на объект в привилегированном режиме.
// Рекомендуется использовать вместо обращения к реквизитам объекта через точку от ссылки на объект
// для быстрого чтения отдельных реквизитов объекта из базы данных.
//
// Если необходимо зачитать реквизит независимо от прав текущего пользователя,
// то следует использовать предварительный переход в привилегированный режим.
//
// Параметры:
//  Ссылка    - ЛюбаяСсылка - объект, значения реквизитов которого необходимо получить.
//            - Строка      - полное имя предопределенного элемента, значения реквизитов которого необходимо получить.
//  ИмяРеквизита       - Строка - имя получаемого реквизита.
//                                Допускается указание имени реквизита через точку, но при этом параметр КодЯзыка для
//                                такого реквизита учитываться не будет.
//  ВыбратьРазрешенные - Булево - если Истина, то запрос к объекту выполняется с учетом прав пользователя;
//                                если есть ограничение на уровне записей, то возвращается Неопределено;
//                                если нет прав для работы с таблицей, то возникнет исключение;
//                                если Ложь, то возникнет исключение при отсутствии прав на таблицу
//                                или любой из реквизитов.
//  КодЯзыка - Строка - код языка для мультиязычного реквизита.
//
// Возвращаемое значение:
//  Произвольный - 
Функция ЗначениеРеквизитаОбъектаВПривилегированномРежиме(Ссылка, ИмяРеквизита) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	ЗначениеРеквизита = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита);
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ЗначениеРеквизита;
	
КонецФункции

#КонецОбласти

#Область ПраваПользователей

Функция ЭтоПолноправныйПользователь(Пользователь = Неопределено,
                                    ПроверятьПраваАдминистрированияСистемы = Ложь,
                                    УчитыватьПривилегированныйРежим = Истина) Экспорт
	
	Возврат Пользователи.ЭтоПолноправныйПользователь(
		Пользователь,
		ПроверятьПраваАдминистрированияСистемы,
		УчитыватьПривилегированныйРежим);
	
КонецФункции

#КонецОбласти

#Область КонтактнаяИнформация

// Актуализирует значения полей КИ из ее представления.
//
//  Параметры:
//		Представление - Строка - представление КИ
//		ЗначенияПолей - Строка - служебная информация, значения полей КИ
//		ТипКИ - ПеречислениеСсылка.ТипыКонтактнойИнформации - тип контактной информации.
//
Процедура ЗаполнитьЗначенияПолейКИПоПредставлению(Представление, ЗначенияПолей, ТипКИ = Неопределено) Экспорт
	
	ОбщегоНазначенияУТ.ЗаполнитьЗначенияПолейКИПоПредставлению(Представление, ЗначенияПолей, ТипКИ);
	
КонецПроцедуры

#КонецОбласти

#Область ПолнотекстовыйПоиск

// Определяет признак использования полнотекстового поиска, исходя из значения переданной ФО
// и настройки использования для базы данных в целом.
//
// Параметры:
//	ИмяФОИспользованияППД - Строка - имя учитываемой функциональной опции.
//
// Возвращаемое значение:
//	Булево - Истина, если используется, Ложь в обратном случае.
//
Функция ИспользуетсяПолнотекстовыйПоиск(ИмяФОИспользованияППД) Экспорт
	
	Возврат ПолучитьФункциональнуюОпцию(ИмяФОИспользованияППД)
		И ПолнотекстовыйПоиск.ПолучитьРежимПолнотекстовогоПоиска() = РежимПолнотекстовогоПоиска.Разрешить;
	
КонецФункции

#КонецОбласти

#Область СпискиВыбора

Процедура ДоступныеДляВыбораЗначенияПеречисления(ИмяПеречисления, ДанныеВыбора, Параметры, ИсключаемыеЗначения) Экспорт
	
	ОбщегоНазначенияУТ.ДоступныеДляВыбораЗначенияПеречисления(
			ИмяПеречисления,
			ДанныеВыбора,
			Параметры,
			ИсключаемыеЗначения);
			
КонецПроцедуры

// См. ОбщегоНазначенияУТ.ДоступныеХозяйственныеОперации.
Функция ДоступныеХозяйственныеОперации(ИмяТаблицы) Экспорт
	
	Возврат ОбщегоНазначенияУТ.ДоступныеХозяйственныеОперации(ИмяТаблицы);
	
КонецФункции

Функция ДатаСеанса() Экспорт
	Возврат ТекущаяДатаСеанса();
КонецФункции

#КонецОбласти

#Область СостояниеВыполненияДокументов

Функция ПроверитьСписокДокументов(МассивДокументов) Экспорт 
	
	СоответствиеТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивДокументов);
	Возврат СоответствиеТипов.Количество() = 1;
	
КонецФункции

#КонецОбласти

#Область СравнениеГрафиковКредитовИДепозитов

Функция ВладелецГрафика(ВариантГрафика) Экспорт
	
	Возврат ВариантГрафика.Владелец;
	
КонецФункции

#КонецОбласти


#Область ОбновлениеИБ

// Возвращает структуру параметров, необходимых при запуске конфигурации.
//
// Параметры:
//   Параметры - Структура - (возвращаемое значение) структура параметров работы программы при запуске.
//
Процедура ПараметрыРаботыКлиентаПриЗапуске(Параметры) Экспорт
	
	// Для запрета обновления с неподдерживаемых версий
	Параметры.Вставить("ВерсияДанных", ОбновлениеИнформационнойБазыСлужебный.ВерсияИБ(Метаданные.Имя, Истина)); 
	Параметры.Вставить("ВерсияМетаданных", СокрЛП(Метаданные.Версия));
	Параметры.Вставить("ЗадатьВопросОПереходеНаОнлайнВзаиморасчеты", Ложь);
	
	Если ОбщегоНазначения.РазделениеВключено()
		И НЕ ОбщегоНазначения.ДоступноИспользованиеРазделенныхДанных() Тогда
		Возврат; // если нулевая область, то выходим
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("БазоваяВерсия") И Пользователи.ЭтоПолноправныйПользователь() Тогда
		МожноСпрашиватьОПереходе = НЕ Константы.НеСпрашиватьПроПереходНаОнлайнВзаиморасчеты.Получить();
		Параметры.ЗадатьВопросОПереходеНаОнлайнВзаиморасчеты = НЕ Константы.НоваяАрхитектураВзаиморасчетов.Получить()
			И Константы.ОтложенноеОбновлениеЗавершеноУспешно.Получить()
			И МожноСпрашиватьОПереходе;
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область Подсистемы

Функция ИмяПодсистемыПланирования() Экспорт
	
	//++ НЕ УТ
	Если ПолучитьФункциональнуюОпцию("УправлениеТорговлей") Тогда
	//-- НЕ УТ
		
		ИмяПодсистемыПланирования = "Планирование";
		
	//++ НЕ УТ
	Иначе
		
		ИмяПодсистемыПланирования = "БюджетированиеИПланирование";
		
	КонецЕсли;
	//-- НЕ УТ
	
	Возврат ИмяПодсистемыПланирования;
	
КонецФункции

#КонецОбласти

#Область Прочее

Процедура ПроверитьПараметрыРеквизитовОбъекта(ПараметрыРеквизитовОбъекта) Экспорт

	Если ПараметрыРеквизитовОбъекта.Количество() = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	ПараметрыРеквизитовОбъектаТаблица = Новый ТаблицаЗначений;
	ПараметрыРеквизитовОбъектаТаблица.Колонки.Добавить("ИмяРеквизита");
	ПараметрыРеквизитовОбъектаТаблица.Колонки.Добавить("ИмяЭлемента");
	ПараметрыРеквизитовОбъектаТаблица.Колонки.Добавить("Свойство");
	ПараметрыРеквизитовОбъектаТаблица.Колонки.Добавить("Количество");
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ПараметрыРеквизитовОбъекта, ПараметрыРеквизитовОбъектаТаблица);
	
	ПараметрыРеквизитовОбъектаТаблица.ЗаполнитьЗначения(1, "Количество");
	ПараметрыРеквизитовОбъектаТаблица.Свернуть("ИмяРеквизита,ИмяЭлемента,Свойство", "Количество");
	ПараметрыРеквизитовОбъектаТаблица.Сортировать("ИмяРеквизита,Свойство");
	
	Для каждого ПараметрыРеквизита Из ПараметрыРеквизитовОбъектаТаблица Цикл
		Если ПараметрыРеквизита.Количество > 1 И ПараметрыРеквизита.ИмяРеквизита <> "" Тогда
			ТекстСообщения = НСтр("ru = 'Для реквизита ""%1"" свойство ""%2"" определяется несколько раз. Обратитесь к администратору.';
									|en = 'The ""%2"" property is determined several times for the ""%1"" attribute. Contact administrator.'");
			ТекстСообщения = СтрШаблон(ТекстСообщения,
										?(ЗначениеЗаполнено(ПараметрыРеквизита.ИмяРеквизита), ПараметрыРеквизита.ИмяРеквизита, ПараметрыРеквизита.ИмяЭлемента), 
										ПараметрыРеквизита.Свойство);
										
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения); 
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
