
#Область ПрограммныйИнтерфейс

// Стандартная функция форматирования прописи количества
//
// Параметры:
//  Количество - Число - число, которое необходимо отформатировать.
//
// Возвращаемое значение:
//  Строка - отформатированное должным образом строковое представление количества.
//
Функция КоличествоПрописью(Количество) Экспорт

	ЦелаяЧасть   = Цел(Количество);
	ДробнаяЧасть = Окр(Количество - ЦелаяЧасть, 3);

	Если ДробнаяЧасть = Окр(ДробнаяЧасть,0) Тогда
		ПараметрыПрописи = ", , , , , , , , 0";
	ИначеЕсли ДробнаяЧасть = Окр(ДробнаяЧасть, 1) Тогда
		ПараметрыПрописи = "целая, целых, целых, ж, десятая, десятых, десятых, м, 1";
	ИначеЕсли ДробнаяЧасть = Окр(ДробнаяЧасть, 2) Тогда
		ПараметрыПрописи = "целая, целых, целых, ж, сотая, сотых, сотых, м, 2";
	Иначе
		ПараметрыПрописи = "целая, целых, целых, ж, тысячная, тысячных, тысячных, м, 3";
	КонецЕсли;

	Возврат ЧислоПрописью(Количество, ,ПараметрыПрописи);

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФормированиеПараметровОтправкиПечатныхФормПоЭлектроннойПочте

Процедура ЗаполнитьПолучателей(СоответствиеТиповДанныхОбъектовПечати, ПараметрыОтправки, КоллекцияПечатныхФорм) 
	
	МассивДокументовРодителей = Новый Массив;
	
	СформироватьТемуИТекстПисьма(СоответствиеТиповДанныхОбъектовПечати, ПараметрыОтправки, КоллекцияПечатныхФорм, МассивДокументовРодителей);
	СформироватьПараметрыОтправки(СоответствиеТиповДанныхОбъектовПечати, ПараметрыОтправки, МассивДокументовРодителей);
	
КонецПроцедуры

Процедура СформироватьТемуИТекстПисьма(СоответствиеТиповДанныхОбъектовПечати, ПараметрыОтправки, КоллекцияПечатныхФорм, МассивДокументовРодителей)
	
	Запрос = Новый Запрос;
		
	Счетчик = 1;
	КоличествоЭлементовВСоответствии = СоответствиеТиповДанныхОбъектовПечати.Количество();
		
	Для каждого ЭлементСоответствия Из СоответствиеТиповДанныхОбъектовПечати Цикл
		
		ТекстЗапросаПоЭлементуСоответствия = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	ОбъектМетаданных.Представление КАК ПредставлениеОбъектаПечати,
		|	ОбъектМетаданных.Ссылка КАК СсылкаНаОбъектПечати,
		|	&СинонимОбъектаМетаданных КАК СинонимОбъектаМетаданных,
		|	&НомерДокумента КАК НомерДокумента,
		|	&ДатаДокумента КАК ДатаДокумента
		|ИЗ
		|	&ОбъектМетаданных КАК ОбъектМетаданных
		|ГДЕ
		|	ОбъектМетаданных.Ссылка В (&МассивСсылок) 
		|
		|И &ОБЪЕДИНИТЬВСЕ
		|";
		
		Запрос.УстановитьПараметр("МассивСсылок_" + Строка(Счетчик), ЭлементСоответствия.Значение.МассивДанных);
		Запрос.УстановитьПараметр("СинонимОбъектаМетаданных_" + Строка(Счетчик),Метаданные.НайтиПоПолномуИмени(ЭлементСоответствия.Ключ).Синоним);
		ТекстЗапросаПоЭлементуСоответствия = СтрЗаменить(ТекстЗапросаПоЭлементуСоответствия, "&МассивСсылок", "&МассивСсылок_" + Строка(Счетчик));
		ТекстЗапросаПоЭлементуСоответствия = СтрЗаменить(ТекстЗапросаПоЭлементуСоответствия, "&СинонимОбъектаМетаданных", "&СинонимОбъектаМетаданных_" + Строка(Счетчик));
		ТекстЗапросаПоЭлементуСоответствия = СтрЗаменить(ТекстЗапросаПоЭлементуСоответствия, "&ОбъектМетаданных", ЭлементСоответствия.Ключ);
		
		Если Счетчик > 1 Тогда
			ТекстЗапросаПоЭлементуСоответствия = СтрЗаменить(ТекстЗапросаПоЭлементуСоответствия, "РАЗРЕШЕННЫЕ", "");
		КонецЕсли;
		
		Если СтрНайти(ЭлементСоответствия.Ключ,"Документ") > 0 Тогда
			ТекстЗапросаПоЭлементуСоответствия = СтрЗаменить(ТекстЗапросаПоЭлементуСоответствия, "&НомерДокумента", "ОбъектМетаданных.Номер");
			ТекстЗапросаПоЭлементуСоответствия = СтрЗаменить(ТекстЗапросаПоЭлементуСоответствия, "&ДатаДокумента", "ОбъектМетаданных.Дата");
		Иначе
			ТекстЗапросаПоЭлементуСоответствия = СтрЗаменить(ТекстЗапросаПоЭлементуСоответствия, "&НомерДокумента", "NULL");
			ТекстЗапросаПоЭлементуСоответствия = СтрЗаменить(ТекстЗапросаПоЭлементуСоответствия, "&ДатаДокумента", "NULL");
		КонецЕсли;
		
		Если Счетчик = КоличествоЭлементовВСоответствии Тогда
			ТекстЗапросаПоЭлементуСоответствия = СтрЗаменить(ТекстЗапросаПоЭлементуСоответствия, "И &ОБЪЕДИНИТЬВСЕ", "");
		Иначе
			ТекстЗапросаПоЭлементуСоответствия = СтрЗаменить(ТекстЗапросаПоЭлементуСоответствия, "И &ОБЪЕДИНИТЬВСЕ", "ОБЪЕДИНИТЬ ВСЕ");
		КонецЕсли;
		
		Счетчик = Счетчик + 1;
		
		Запрос.Текст = Запрос.Текст + ТекстЗапросаПоЭлементуСоответствия;
		
	КонецЦикла;
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Если КоллекцияПечатныхФорм.Количество() = 1 Тогда
		ПараметрыОтправки.Тема = КоллекцияПечатныхФорм[0].СинонимМакета;
		
	Иначе 
		ПараметрыОтправки.Тема = НСтр("ru = 'Документы';
										|en = 'Documents'");
	КонецЕсли;
	
	ПараметрыОтправки.Текст = НСтр("ru = 'Во вложении печатные формы.';
									|en = 'Print forms attached.'") + Символы.ПС;
	
	Выборка = Результат.Выбрать();
	
	Для Каждого ПечатнаяФорма Из КоллекцияПечатныхФорм Цикл
		ПараметрыОтправки.Текст = ПараметрыОтправки.Текст + "   " + ПечатнаяФорма.СинонимМакета + Символы.ПС;
	КонецЦикла;
	
	ПараметрыОтправки.Текст = ПараметрыОтправки.Текст + НСтр("ru = 'Для документов:';
															|en = 'For documents:'") + Символы.ПС;
	
	Пока Выборка.Следующий() Цикл
		ПараметрыОтправки.Текст = ПараметрыОтправки.Текст + "   " + ПредставлениеОбъектаПечати(Выборка, Истина) + Символы.ПС;
		ПолучитьРодительскиеДокументы(МассивДокументовРодителей,Выборка.СсылкаНаОбъектПечати);
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьПолучателяПечатнойФормы(Получатели, ДанныеПолучателя, Пояснение = "") Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеПолучателя.Адрес) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ВозможныйПолучатель Из Получатели Цикл
		
		Если ВозможныйПолучатель.ВидПочтовогоАдреса = Строка(ДанныеПолучателя.ВидПочтовогоАдреса)
			И СокрЛП(ВозможныйПолучатель.Адрес) = СокрЛП(ДанныеПолучателя.Адрес) Тогда
			
			Возврат;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ПустаяСтрока(Пояснение) Тогда
		Получатель = Неопределено;
		Для каждого Получатель Из Получатели Цикл
			Если Получатель.ИсточникКонтактнойИнформации = ДанныеПолучателя.ИсточникКонтактнойИнформации Тогда
				Если СтрНайти(Получатель.Адрес, ДанныеПолучателя.Адрес) = 0 Тогда
					Получатель.Адрес = Получатель.Адрес + "; " + ДанныеПолучателя.Адрес;
				КонецЕсли;
				Пояснение = ПредставлениеОбъектаПечати(ДанныеПолучателя);
				Если СтрНайти(Получатель.Пояснение, Пояснение) = 0 Тогда
					Получатель.Пояснение = Получатель.Пояснение + ", " + Пояснение;
				КонецЕсли;
				Возврат;
			КонецЕсли;
		КонецЦикла;
		ПредставлениеОбъектаПечати = ПредставлениеОбъектаПечати(ДанныеПолучателя);
		Пояснение = ДанныеПолучателя.СинонимРеквизитаПолучателя + " " 
		            + ?(ПустаяСтрока(ПредставлениеОбъектаПечати),"", НСтр("ru = 'из';
																			|en = 'from'")) + " " + ПредставлениеОбъектаПечати;
	КонецЕсли;
	
	СтруктураПолучатель = Новый Структура;
	СтруктураПолучатель.Вставить("Адрес", ДанныеПолучателя.Адрес);
	СтруктураПолучатель.Вставить("Представление", ДанныеПолучателя.ПредставлениеПолучателя);
	СтруктураПолучатель.Вставить("ИсточникКонтактнойИнформации", ДанныеПолучателя.ИсточникКонтактнойИнформации);
	СтруктураПолучатель.Вставить("ВидПочтовогоАдреса", Строка(ДанныеПолучателя.ВидПочтовогоАдреса));
	СтруктураПолучатель.Вставить("Пояснение", Пояснение);
	СтруктураПолучатель.Вставить("ОбъектИсточник", ДанныеПолучателя.СсылкаНаОбъектПечати);
	
	Получатели.Добавить(СтруктураПолучатель);
	
КонецПроцедуры

Функция ПредставлениеОбъектаПечати(ДанныеПолучателя,ПреобразовыватьПредставлениеДокумента = Ложь)
	
	ТипСсылки = ТипЗнч(ДанныеПолучателя.СсылкаНаОбъектПечати);
	
	Если ТипСсылки = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		Возврат НСтр("ru = 'Договор';
					|en = 'Contract'") + " '" +  ДанныеПолучателя.ПредставлениеОбъектаПечати + "'";
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.СоглашенияСКлиентами") Тогда
		Возврат НСтр("ru = 'Соглашение с клиентом';
					|en = 'Agreement with customer'") + " '" +  ДанныеПолучателя.ПредставлениеОбъектаПечати + "'";
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.СделкиСКлиентами") Тогда
		Возврат НСтр("ru = 'Сделка с клиентом';
					|en = 'Sales opportunity'") + " '" +  ДанныеПолучателя.ПредставлениеОбъектаПечати + "'";
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.Партнеры") Тогда
		Возврат "";
	Иначе
		Если ПреобразовыватьПредставлениеДокумента Тогда
			
			НомерДокумента = ДанныеПолучателя.НомерДокумента;
			ДатаДокумента  = ДанныеПолучателя.ДатаДокумента;
			
			ПредставлениеДокумента = НСтр("ru = '%Синоним% №%Номер% от %Дата%';
											|en = '%Синоним% No.%Номер% dated %Дата%'");
			ПредставлениеДокумента = СтрЗаменить(ПредставлениеДокумента, "%Номер%", НомерДокумента);
			ПредставлениеДокумента = СтрЗаменить(ПредставлениеДокумента, "%Дата%", Формат(ДатаДокумента, "ДЛФ=D"));
			ПредставлениеДокумента = СтрЗаменить(ПредставлениеДокумента, "%Синоним%", ДанныеПолучателя.СинонимОбъектаМетаданных);
			Возврат ПредставлениеДокумента;
			
		Иначе
			Возврат ДанныеПолучателя.ПредставлениеОбъектаПечати;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции 

// Функция-конструктор - создает структуру данных объекта печати
// 
// Возвращаемое значение:
// 	Структура - состоит из:
// * ОсновнойПолучатель - Строка - 
// * МассивРеквизитовПолучателей - Массив из Строка - 
// * МассивДанных - Массив из ЛюбаяСсылка - 
// 
Функция НоваяСтруктураДанныхОбъектаПечати() Экспорт
	
	Результат = Новый Структура();
	
	Результат.Вставить("ОсновнойПолучатель", "");
	Результат.Вставить("МассивРеквизитовПолучателей", Новый Массив);
	Результат.Вставить("МассивДанных");
	
	Возврат Результат;
	
КонецФункции

Функция ЗаполнениеПараметровОтправкиВозможно(СоответствиеТиповДанныхОбъектовПечати)
	
	Запрос = Новый Запрос;
	
	Счетчик = 1;
	ЭтоПервыйЭлементЗапроса = Истина;
	
	Для каждого ЭлементСоответствия Из СоответствиеТиповДанныхОбъектовПечати Цикл
		
		Если НЕ ЗначениеЗаполнено(ЭлементСоответствия.Значение.ОсновнойПолучатель) Тогда
			Счетчик = Счетчик + 1;
			Продолжить;
		КонецЕсли;
		
		Если Не ПустаяСтрока(Запрос.Текст) Тогда
		Запрос.Текст = Запрос.Текст  + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
		
		ТекстЗапросаПоЭлементуСоответствия = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
		|	&ИмяРеквизита КАК ОсновнойПолучатель
		|ИЗ
		|	&ОбъектМетаданных КАК ОбъектМетаданных
		|ГДЕ
		|	ОбъектМетаданных.Ссылка В (&МассивСсылок)
		|";
		
		Запрос.УстановитьПараметр("МассивСсылок_" + Строка(Счетчик), ЭлементСоответствия.Значение.МассивДанных);
		ТекстЗапросаПоЭлементуСоответствия = СтрЗаменить(ТекстЗапросаПоЭлементуСоответствия, "&МассивСсылок", "&МассивСсылок_" + Строка(Счетчик));
		ТекстЗапросаПоЭлементуСоответствия = СтрЗаменить(ТекстЗапросаПоЭлементуСоответствия, "&ОбъектМетаданных", ЭлементСоответствия.Ключ);
		ТекстЗапросаПоЭлементуСоответствия = СтрЗаменить(ТекстЗапросаПоЭлементуСоответствия, "&ИмяРеквизита", "ОбъектМетаданных."+ЭлементСоответствия.Значение.ОсновнойПолучатель);
		
		Если ЭтоПервыйЭлементЗапроса Тогда
			ЭтоПервыйЭлементЗапроса = Ложь;
		Иначе
			ТекстЗапросаПоЭлементуСоответствия = СтрЗаменить(ТекстЗапросаПоЭлементуСоответствия, "РАЗРЕШЕННЫЕ ПЕРВЫЕ 2", "");
		КонецЕсли;
		
		Счетчик = Счетчик + 1;
		
		Запрос.Текст = Запрос.Текст + ТекстЗапросаПоЭлементуСоответствия;
		
	КонецЦикла;
	
	// Если основные получатели не заданы, то и посылать нет смысла
	Если ПустаяСтрока(Запрос.Текст) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Если Выборка.Количество() = 1 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции 

Процедура ПолучитьРодительскиеДокументы(МассивДокументовРодителей, ДокументПечати) Экспорт

	Если ДокументПечати.Метаданные().Реквизиты.Найти("КонтактноеЛицо") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДеревоДокументов = Новый ДеревоЗначений;
	ДеревоДокументов.Колонки.Добавить("Ссылка");
	ДополнитьДеревоРодительскихДокументов(ДокументПечати, ДеревоДокументов);
	
	ДобавитьРодительскиеДокументыВМассивИзДерева(ДеревоДокументов, МассивДокументовРодителей)

КонецПроцедуры

Процедура ДобавитьРодительскиеДокументыВМассивИзДерева(ДеревоРодитель, МассивДокументовРодителей)

	СтрокиДерева = ДеревоРодитель.Строки;
	Для Каждого СтрокаДерева Из СтрокиДерева Цикл
		Если МассивДокументовРодителей.Найти(СтрокаДерева.Ссылка) = Неопределено Тогда
			МассивДокументовРодителей.Добавить(СтрокаДерева.Ссылка);
		КонецЕсли;
		ДобавитьРодительскиеДокументыВМассивИзДерева(СтрокаДерева, МассивДокументовРодителей);
	КонецЦикла;

КонецПроцедуры

Функция РеквизитУдовлетворяетУсловиям(Реквизит)

	Возврат Метаданные.КритерииОтбора.СвязанныеДокументы.Состав.Содержит(Реквизит) ИЛИ 
	        Реквизит.Тип.СодержитТип(Тип("СправочникСсылка.ДоговорыКонтрагентов")) ИЛИ
	        Реквизит.Тип.СодержитТип(Тип("СправочникСсылка.СоглашенияСКлиентами")) ИЛИ
	        Реквизит.Тип.СодержитТип(Тип("СправочникСсылка.СделкиСКлиентами"));

КонецФункции

Процедура ДополнитьДеревоРодительскихДокументов(ТекущийДокумент, ДеревоРодитель)

	СтрокиДерева = ДеревоРодитель.Строки;
	МетаданныеДокумента        = ТекущийДокумент.Метаданные();
	ПолноеИмяОбъектаМетаданных = МетаданныеДокумента.ПолноеИмя();
	
	СписокРеквизитов    = Новый СписокЗначений;
	
	Для Каждого Реквизит Из МетаданныеДокумента.Реквизиты Цикл
		
		Если РеквизитУдовлетворяетУсловиям(Реквизит) Тогда
			
			Для Каждого ТекущийТип Из Реквизит.Тип.Типы() Цикл
				
				МетаданныеРеквизита = Метаданные.НайтиПоТипу(ТекущийТип);
				
				Если МетаданныеРеквизита <> Неопределено
					И (Метаданные.Документы.Содержит(МетаданныеРеквизита) ИЛИ Метаданные.Справочники.Содержит(МетаданныеРеквизита))
					И ПравоДоступа("Чтение", МетаданныеРеквизита) Тогда
					
					Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	&ИмяРеквизита КАК ЗначениеРеквизита
					|ИЗ
					|	&ПолноеИмяОбъектаМетаданных КАК ОбъектМетаданных
					|ГДЕ
					|	ОбъектМетаданных.Ссылка = &ТекущийДокумент");
					
					Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
					Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПолноеИмяОбъектаМетаданных", ПолноеИмяОбъектаМетаданных);
					Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИмяРеквизита", Реквизит.Имя);
					
					Выборка = Запрос.Выполнить().Выбрать();
					Если Выборка.Следующий() Тогда
						ЗначениеРеквизита = Выборка.ЗначениеРеквизита;
					Иначе
						Продолжить;
					КонецЕсли;
					
					Если ЗначениеЗаполнено(ЗначениеРеквизита)
						И ТипЗнч(ЗначениеРеквизита) = ТекущийТип
						И ЗначениеРеквизита <> ТекущийДокумент
						И СписокРеквизитов.НайтиПоЗначению(ЗначениеРеквизита) = Неопределено Тогда
						
						СписокРеквизитов.Добавить(ЗначениеРеквизита);
						
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;

	Для Каждого ТЧ Из МетаданныеДокумента.ТабличныеЧасти Цикл
		СтрРеквизитов = "";

		Для Каждого Реквизит Из ТЧ.Реквизиты Цикл

			Если РеквизитУдовлетворяетУсловиям(Реквизит) Тогда
				
				Для Каждого ТекущийТип Из Реквизит.Тип.Типы() Цикл
					
					МетаданныеРеквизита = Метаданные.НайтиПоТипу(ТекущийТип);
					
					Если МетаданныеРеквизита<>Неопределено
						И (Метаданные.Документы.Содержит(МетаданныеРеквизита) ИЛИ Метаданные.Справочники.Содержит(МетаданныеРеквизита))
						И ПравоДоступа("Чтение", МетаданныеРеквизита) Тогда
						
						СтрРеквизитов = СтрРеквизитов + ?(СтрРеквизитов = "", "", ", ") + Реквизит.Имя;
						Прервать;
						
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если ПустаяСтрока(СтрРеквизитов) Тогда
			Продолжить;
		КонецЕсли;
		
		СодержимоеТЧ = ТекущийДокумент[ТЧ.Имя].Выгрузить(); // ТаблицаЗначений
		СодержимоеТЧ.Свернуть(СтрРеквизитов);
		Для Каждого КолонкаТЧ Из СодержимоеТЧ.Колонки Цикл

			Для Каждого СтрокаТЧ Из СодержимоеТЧ Цикл

				ЗначениеРеквизита = СтрокаТЧ[КолонкаТЧ.Имя];

				МетаданныеЗначения = Метаданные.НайтиПоТипу(ТипЗнч(ЗначениеРеквизита));
				Если МетаданныеЗначения <> Неопределено Тогда

					Если ЗначениеЗаполнено(ЗначениеРеквизита)
						И (Метаданные.Документы.Содержит(МетаданныеЗначения) ИЛИ Метаданные.Справочники.Содержит(МетаданныеЗначения))
						И ЗначениеРеквизита <> ТекущийДокумент
						И СписокРеквизитов.НайтиПоЗначению(ЗначениеРеквизита) = Неопределено Тогда

							СписокРеквизитов.Добавить(ЗначениеРеквизита);

					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Для каждого ЭлементСписка Из СписокРеквизитов Цикл
		
		Если СодержитсяВПодсистеме("Продажи", МетаданныеДокумента) 
			И СодержитсяВПодсистеме("Закупки", ЭлементСписка.Значение.Метаданные()) Тогда
			
			Продолжить;
			
		ИначеЕсли  СодержитсяВПодсистеме("Закупки", МетаданныеДокумента) 
			И СодержитсяВПодсистеме("Продажи", ЭлементСписка.Значение.Метаданные()) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		НоваяСтрока = СтрокиДерева.Добавить();
		НоваяСтрока.Ссылка = ЭлементСписка.Значение;
		Если НЕ ДобавляемаяСсылкаИмеетсяСредиРодителей(ДеревоРодитель, ЭлементСписка.Значение) Тогда
			ДополнитьДеревоРодительскихДокументов(ЭлементСписка.Значение, НоваяСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СодержитсяВПодсистеме(ИмяПодсистемы, ОбъектМетаданных)
	
	МетаданныеПодсистемы = Метаданные.Подсистемы[ИмяПодсистемы];
	
	Если МетаданныеПодсистемы.Состав.Содержит(ОбъектМетаданных) Тогда
		
		Возврат Истина;
	
	КонецЕсли;
	
	Для Каждого ПодчиненнаяПодсистема Из МетаданныеПодсистемы.Подсистемы Цикл
		
		Если ПодчиненнаяПодсистема.Состав.Содержит(ОбъектМетаданных) Тогда
			
			Возврат Истина;
			
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Функция ДобавляемаяСсылкаИмеетсяСредиРодителей(СтрокаРодитель,ИскомыйДокумент)
	
	Если ТипЗнч(СтрокаРодитель) = Тип("ДеревоЗначений") Тогда
		Возврат Ложь; 
	КонецЕсли;
	
	ТекущийРодитель = СтрокаРодитель;
	Пока ТекущийРодитель <> Неопределено Цикл
		Если ТекущийРодитель.Ссылка = ИскомыйДокумент Тогда
			Возврат Истина;
		КонецЕсли;
		ТекущийРодитель = ТекущийРодитель.Родитель;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Процедура СформироватьПараметрыОтправки(СоответствиеТиповДанныхОбъектовПечати, ПараметрыОтправки, МассивДокументовРодителей, ТребуетсяТелефоны = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	СчетчикОбъектовМетаданных = 1;
	ПервыйЗапросВОбъединении = Истина;
	КоличествоЭлементовВСоответствии = СоответствиеТиповДанныхОбъектовПечати.Количество();
	
	Для каждого ЭлементСоответствия Из СоответствиеТиповДанныхОбъектовПечати Цикл
		
		МассивРеквизитовПолучателей = ЭлементСоответствия.Значение.МассивРеквизитовПолучателей;
		
		Если МассивРеквизитовПолучателей.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		МетаданныеОбъектаПолучателя = Метаданные.НайтиПоПолномуИмени(ЭлементСоответствия.Ключ);
		Если МетаданныеОбъектаПолучателя = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикРеквизитовПолучателей = 1;
		КоличествоЭлементовВМассиве = МассивРеквизитовПолучателей.Количество();
		
		Для каждого ИмяРеквизитаПолучателя Из МассивРеквизитовПолучателей Цикл
			
			ТабличнаяЧасть = Неопределено;
			Если ИмяРеквизитаПолучателя = "Ссылка" Тогда
				СинонимРеквизитаПолучателя = МетаданныеОбъектаПолучателя.ПредставлениеОбъекта;
				ОписаниеТиповРеквизита = Новый ОписаниеТипов((СтрЗаменить(ЭлементСоответствия.Ключ, "Справочник", "СправочникСсылка")));
				ТаблицаОбъектаПечати = ЭлементСоответствия.Ключ;
			Иначе
				РеквизитПолучателя = МетаданныеОбъектаПолучателя.Реквизиты.Найти(ИмяРеквизитаПолучателя);
				ТаблицаОбъектаПечати = ЭлементСоответствия.Ключ;
				
				Если РеквизитПолучателя = Неопределено Тогда
					ДанныеРеквизита = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИмяРеквизитаПолучателя,".");
					Если ДанныеРеквизита.Количество() = 2 Тогда
						ИмяТабличнойЧасти = ДанныеРеквизита[0];
						ТабличнаяЧасть    = МетаданныеОбъектаПолучателя.ТабличныеЧасти.Найти(ИмяТабличнойЧасти);
						Если ТабличнаяЧасть <> Неопределено Тогда
							ИмяРеквизитаПолучателя = ДанныеРеквизита[1];
							РеквизитПолучателя = ТабличнаяЧасть.Реквизиты.Найти(ИмяРеквизитаПолучателя);
							Если РеквизитПолучателя = Неопределено Тогда
								Продолжить;
							Иначе
								ТаблицаОбъектаПечати = ЭлементСоответствия.Ключ + "." + ИмяТабличнойЧасти;
							КонецЕсли;
						Иначе
							МетаданныеРеквизита = МетаданныеОбъектаПолучателя.Реквизиты.Найти(ДанныеРеквизита[0]);
							Если МетаданныеРеквизита <> Неопределено Тогда
								Для Каждого ТипРеквизита Из МетаданныеРеквизита.Тип.Типы() Цикл
									МетаданныеТипаРеквизита = Метаданные.НайтиПоТипу(ТипРеквизита);
									Если МетаданныеТипаРеквизита <> Неопределено Тогда
										РеквизитПолучателя = МетаданныеТипаРеквизита.Реквизиты.Найти(ДанныеРеквизита[1]);
										Если РеквизитПолучателя = Неопределено Тогда
											Продолжить;
										КонецЕсли;
									Иначе
										Продолжить;
									КонецЕсли;
								КонецЦикла;
								Если РеквизитПолучателя = Неопределено Тогда
									Продолжить;
								КонецЕсли;
							Иначе
								Продолжить;
							КонецЕсли;
						КонецЕсли;
					Иначе
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				СинонимРеквизитаПолучателя = РеквизитПолучателя.Синоним;
				ОписаниеТиповРеквизита     = РеквизитПолучателя.Тип;
				
			КонецЕсли;
			
			ПредставлениеПолучателя = "ПРЕДСТАВЛЕНИЕ(ОбъектПечати."+ИмяРеквизитаПолучателя + ")";
			Если ОписаниеТиповРеквизита.СодержитТип(Тип("СправочникСсылка.Партнеры")) Тогда
					ИмяТаблицыКонтактнойИнформации = "Справочник.Партнеры.КонтактнаяИнформация";
				ИначеЕсли ОписаниеТиповРеквизита.СодержитТип(Тип("СправочникСсылка.Контрагенты")) Тогда
					ИмяТаблицыКонтактнойИнформации = "Справочник.Контрагенты.КонтактнаяИнформация";
					ПредставлениеПолучателя = "ОбъектПечати."+ИмяРеквизитаПолучателя + ".НаименованиеПолное";
				ИначеЕсли ОписаниеТиповРеквизита.СодержитТип(Тип("СправочникСсылка.КонтактныеЛицаПартнеров")) Тогда
					ИмяТаблицыКонтактнойИнформации = "Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация";
				Иначе
					
					Продолжить;
					
			КонецЕсли;
			
			ТекстЗапросаПоРеквизиту ="
			|
			|%ОБЪЕДИНИТЬВСЕ%
			|" ;
			
			ТекстЗапросаПоРеквизиту = ТекстЗапросаПоРеквизиту + "
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	&ПредставлениеОбъектаПечати               КАК ПредставлениеОбъектаПечати,
			|	ОбъектПечати.Ссылка                       КАК СсылкаНаОбъектПечати,
			|	&СинонимРеквизитаПолучателя               КАК СинонимРеквизитаПолучателя,
			|	&ИмяРеквизитаПолучателя                   КАК ИсточникКонтактнойИнформации,
			|	&ПредставлениеПолучателя                  КАК ПредставлениеПолучателя,
			|	ТаблицаКонтактнойИнформации.Представление КАК Адрес,
			|	ТаблицаКонтактнойИнформации.Вид           КАК ВидПочтовогоАдреса
			|ИЗ
			|	&ОбъектПечати КАК ОбъектПечати
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ &ТаблицаКонтактнойИнформации КАК ТаблицаКонтактнойИнформации
			|		ПО &ИмяРеквизитаПолучателя = ТаблицаКонтактнойИнформации.Ссылка
			|ГДЕ
			|	ОбъектПечати.Ссылка В(&МассивСсылок)
			|	И ТаблицаКонтактнойИнформации.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)";
			
			ТекстЗапросаПоРеквизиту = СтрЗаменить(ТекстЗапросаПоРеквизиту, "&МассивСсылок", "&МассивСсылок_" + Строка(СчетчикОбъектовМетаданных));
			ТекстЗапросаПоРеквизиту = СтрЗаменить(ТекстЗапросаПоРеквизиту, "&СинонимРеквизитаПолучателя", "&СинонимРеквизитаПолучателя_" + Строка(СчетчикОбъектовМетаданных) + "_" + Строка(СчетчикРеквизитовПолучателей));
			ТекстЗапросаПоРеквизиту = СтрЗаменить(ТекстЗапросаПоРеквизиту, "&ИмяРеквизитаПолучателя", "ОбъектПечати."+ИмяРеквизитаПолучателя);
			ТекстЗапросаПоРеквизиту = СтрЗаменить(ТекстЗапросаПоРеквизиту, "&ПредставлениеПолучателя", ПредставлениеПолучателя);
			ТекстЗапросаПоРеквизиту = СтрЗаменить(ТекстЗапросаПоРеквизиту, "&ОбъектПечати", ТаблицаОбъектаПечати);
			ТекстЗапросаПоРеквизиту = СтрЗаменить(ТекстЗапросаПоРеквизиту, "&ТаблицаКонтактнойИнформации", ИмяТаблицыКонтактнойИнформации);
			
			Запрос.УстановитьПараметр("СинонимРеквизитаПолучателя_" + Строка(СчетчикОбъектовМетаданных) + "_" + Строка(СчетчикРеквизитовПолучателей), СинонимРеквизитаПолучателя);
			
			Если ПервыйЗапросВОбъединении Тогда
				ТекстЗапросаПоРеквизиту = СтрЗаменить(ТекстЗапросаПоРеквизиту, "%ОБЪЕДИНИТЬВСЕ%", "");
				ПервыйЗапросВОбъединении = Ложь;
			Иначе
				ТекстЗапросаПоРеквизиту = СтрЗаменить(ТекстЗапросаПоРеквизиту, "РАЗРЕШЕННЫЕ", "");
				ТекстЗапросаПоРеквизиту = СтрЗаменить(ТекстЗапросаПоРеквизиту, "%ОБЪЕДИНИТЬВСЕ%", "ОБЪЕДИНИТЬ ВСЕ");
			КонецЕсли;
			
			Если ТабличнаяЧасть = Неопределено Тогда
				ТекстЗапросаПоРеквизиту = СтрЗаменить(ТекстЗапросаПоРеквизиту, "&ПредставлениеОбъектаПечати", "ОбъектПечати.Представление");
			Иначе
				ТекстЗапросаПоРеквизиту = СтрЗаменить(ТекстЗапросаПоРеквизиту, "&ПредставлениеОбъектаПечати", "ОбъектПечати.Ссылка.Представление");
			КонецЕсли;
			
			Если ТребуетсяТелефоны Тогда
				
				ТекстЗапросаПоРеквизиту = СтрЗаменить(ТекстЗапросаПоРеквизиту, "АдресЭлектроннойПочты", "Телефон");
				
			КонецЕсли;
			
			Запрос.Текст = Запрос.Текст + ТекстЗапросаПоРеквизиту;
			СчетчикРеквизитовПолучателей = СчетчикРеквизитовПолучателей + 1;
			
		КонецЦикла;
		
		Запрос.УстановитьПараметр("МассивСсылок_" + Строка(СчетчикОбъектовМетаданных), ЭлементСоответствия.Значение.МассивДанных);
		СчетчикОбъектовМетаданных = СчетчикОбъектовМетаданных + 1;
		
	КонецЦикла;
	
	Если МассивДокументовРодителей.Количество() > 0 Тогда
		
		СчетчикТипыДокументыРодители = 1;
		СоответствиеТиповДанныхРодительскихДокументов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивДокументовРодителей);
		Для каждого ЭлементСоответствия Из СоответствиеТиповДанныхРодительскихДокументов Цикл
			
			Если Метаданные.НайтиПоПолномуИмени(ЭлементСоответствия.Ключ).Реквизиты.Найти("КонтактноеЛицо") = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ТекстЗапросаПоДокументуРодителю = "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
			ТекстЗапросаПоДокументуРодителю = ТекстЗапросаПоДокументуРодителю + "
			|ВЫБРАТЬ 
			|	ДокументРодитель.Представление КАК ПредставлениеОбъектаПечати,
			|	ДокументРодитель.Ссылка КАК СсылкаНаОбъектПечати,
			|	&КонтактноеЛицо КАК СинонимРеквизитаПолучателя,
			|	ДокументРодитель.КонтактноеЛицо КАК ИсточникКонтактнойИнформации,
			|	ПРЕДСТАВЛЕНИЕ(ДокументРодитель.КонтактноеЛицо) КАК ПредставлениеПолучателя,
			|	ТаблицаКонтактнойИнформации.Представление КАК Адрес,
			|	ТаблицаКонтактнойИнформации.Вид КАК ВидПочтовогоАдреса
			|ИЗ
			|	&ДокументРодитель КАК ДокументРодитель
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК ТаблицаКонтактнойИнформации
			|		ПО ДокументРодитель.КонтактноеЛицо = ТаблицаКонтактнойИнформации.Ссылка
			|ГДЕ
			|	ДокументРодитель.Ссылка В(&МассивСсылок)
			|	И ТаблицаКонтактнойИнформации.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)";
			
			ТекстЗапросаПоДокументуРодителю = СтрЗаменить(ТекстЗапросаПоДокументуРодителю, "&ДокументРодитель", ЭлементСоответствия.Ключ);
			ТекстЗапросаПоДокументуРодителю = СтрЗаменить(ТекстЗапросаПоДокументуРодителю, "&МассивСсылок", "&МассивСсылокДокументыРодители_" + Строка(СчетчикТипыДокументыРодители));
			
			Если ТребуетсяТелефоны Тогда
				ТекстЗапросаПоДокументуРодителю = СтрЗаменить(ТекстЗапросаПоДокументуРодителю, "АдресЭлектроннойПочты", "Телефон");
			КонецЕсли;

			Запрос.УстановитьПараметр("МассивСсылокДокументыРодители_" + Строка(СчетчикТипыДокументыРодители), ЭлементСоответствия.Значение);
			
			Запрос.Текст = Запрос.Текст + ТекстЗапросаПоДокументуРодителю;
			
			СчетчикТипыДокументыРодители = СчетчикТипыДокументыРодители + 1;
			
		КонецЦикла;
		
		Запрос.УстановитьПараметр("КонтактноеЛицо", НСтр("ru = 'Контактное лицо';
														|en = 'Contact person'"));
		
	КонецЕсли;
	
	Если ПустаяСтрока(Запрос.Текст) Тогда
		Возврат;
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	ПараметрыОтправки.Получатель = Новый Массив;
	Пока Выборка.Следующий() Цикл
		
		ДобавитьПолучателяПечатнойФормы(ПараметрыОтправки.Получатель, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
