<?xml version="1.0" encoding="UTF-8"?>
<V8Exch:_1CV8DtUD xmlns:V8Exch="http://www.1c.ru/V8/1CV8DtUD/" xmlns:core="http://v8.1c.ru/data" xmlns:v8="http://v8.1c.ru/8.1/data/enterprise/current-config" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<V8Exch:Data>
		<v8:InformationRegisterRecordSet.TrierRabbitMQСинхронизируемыеОбъекты>
			<v8:Filter>
				<FilterItem xmlns="http://v8.1c.ru/8.1/data/enterprise">
					<Name xsi:type="xs:string">ИмяТипаОбъекта</Name>
					<Value xsi:type="xs:string">CatalogRef.СертификатыНоменклатуры</Value>
				</FilterItem>
				<FilterItem xmlns="http://v8.1c.ru/8.1/data/enterprise">
					<Name xsi:type="xs:string">НаправлениеСинхронизации</Name>
					<Value xsi:type="v8:EnumRef.TrierRabbitMQПеречислениеНаправленияСинхронизации">Входящая</Value>
				</FilterItem>
			</v8:Filter>
			<v8:Record>
				<v8:ИмяТипаОбъекта>CatalogRef.СертификатыНоменклатуры</v8:ИмяТипаОбъекта>
				<v8:НаправлениеСинхронизации>Входящая</v8:НаправлениеСинхронизации>
				<v8:КлючМаршрутизации/>
				<v8:ТочкаОбмена>CertificatesTest</v8:ТочкаОбмена>
				<v8:ПроцедураОбработки>НоменклатураСсылка = Справочники.Товары.НайтиПоКоду(Данные.Номенклатура);
Если НЕ НоменклатураСсылка.Пустая() Тогда
Если НЕ НоменклатураСсылка.ВестиУчетСертификатовНоменклатуры Тогда
НоменклатураОбъект = НоменклатураСсылка.ПолучитьОбъект();
НоменклатураОбъект.ВестиУчетСертификатовНоменклатуры = Истина;
НоменклатураОбъект.Записать();
КонецЕсли;
     Данные.СертификатНоменклатуры.ДополнительныеСвойства.Вставить("НеОтправлятьКролику", Истина);
	Данные.СертификатНоменклатуры.Записать();			
	ОбластьДействия = РегистрыСведений.ОбластиДействияСертификатовНоменклатуры.СоздатьМенеджерЗаписи();	
	ОбластьДействия.ВидНоменклатуры = Справочники.ВидыНоменклатуры.НайтиПоНаименованию(Данные.ВидНоменклатуры);
	ОбластьДействия.Номенклатура    = НоменклатураСсылка;
	ОбластьДействия.СертификатНоменклатуры = Данные.СертификатНоменклатуры.Ссылка;
	ОбластьДействия.Записать(Истина);

КонецЕсли;</v8:ПроцедураОбработки>
			</v8:Record>
		</v8:InformationRegisterRecordSet.TrierRabbitMQСинхронизируемыеОбъекты>
		<v8:InformationRegisterRecordSet.TrierRabbitMQСинхронизируемыеОбъекты>
			<v8:Filter>
				<FilterItem xmlns="http://v8.1c.ru/8.1/data/enterprise">
					<Name xsi:type="xs:string">ИмяТипаОбъекта</Name>
					<Value xsi:type="xs:string">CatalogRef.СертификатыНоменклатуры</Value>
				</FilterItem>
				<FilterItem xmlns="http://v8.1c.ru/8.1/data/enterprise">
					<Name xsi:type="xs:string">НаправлениеСинхронизации</Name>
					<Value xsi:type="v8:EnumRef.TrierRabbitMQПеречислениеНаправленияСинхронизации">Исходящая</Value>
				</FilterItem>
			</v8:Filter>
			<v8:Record>
				<v8:ИмяТипаОбъекта>CatalogRef.СертификатыНоменклатуры</v8:ИмяТипаОбъекта>
				<v8:НаправлениеСинхронизации>Исходящая</v8:НаправлениеСинхронизации>
				<v8:КлючМаршрутизации/>
				<v8:ТочкаОбмена>CertificatesTest</v8:ТочкаОбмена>
				<v8:ПроцедураОбработки>Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|ОбластиДействияСертификатовНоменклатуры.ВидНоменклатуры КАК ВидНоменклатуры,
	|ОбластиДействияСертификатовНоменклатуры.Номенклатура КАК Номенклатура,
	|ОбластиДействияСертификатовНоменклатуры.Характеристика КАК Характеристика,
	|ОбластиДействияСертификатовНоменклатуры.Серия КАК Серия,
	|ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры КАК СертификатНоменклатуры
	|ИЗ
	|	РегистрСведений.ОбластиДействияСертификатовНоменклатуры КАК ОбластиДействияСертификатовНоменклатуры
	|ГДЕ
	|	ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры В (&amp;СертификатыНоменклатуры)";
	
	Запрос.УстановитьПараметр("СертификатыНоменклатуры", Объект);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СтруктураJson = Новый Структура;
            ГруппаДоступаНаименование = ?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Номенклатура),ВыборкаДетальныеЗаписи.Номенклатура.ГруппаДоступа.Наименование,"");
            КлючМаршрутизации = СтрЗаменить(ГруппаДоступаНаименование,"-",".");
            Если ЗначениеЗаполнено(КлючМаршрутизации) Тогда
	      КлючиОтправки.КлючМаршрутизации = КлючМаршрутизации;
            КонецЕсли; 
            СтруктураJson.Вставить("ИмяТипаОбъекта", XMLТип(ВыборкаОбъектыКОтправке.ТипЗначения).ИмяТипа);
		СтруктураJson.Вставить("ВидНоменклатуры", ВыборкаДетальныеЗаписи.ВидНоменклатуры.Наименование);
		СтруктураJson.Вставить("Номенклатура",?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Номенклатура),ВыборкаДетальныеЗаписи.Номенклатура.Код,""));
            СтруктураХарактеристики = Новый Структура;
            СтруктураХарактеристики.Вставить("Наименование", ?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Характеристика),ВыборкаДетальныеЗаписи.Характеристика.Наименование,""));
            СтруктураХарактеристики.Вставить("УникальныйИдентификатор", ?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Характеристика),ВыборкаДетальныеЗаписи.Характеристика.УникальныйИдентификатор(),""));
            СтруктураСерии = Новый Структура;
            СтруктураСерии.Вставить("Наименование", ?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Серия),ВыборкаДетальныеЗаписи.Серия.Наименование,""));
            СтруктураСерии.Вставить("УникальныйИдентификатор", ?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Серия),ВыборкаДетальныеЗаписи.Серия.УникальныйИдентификатор(),"")); 
            СтруктураСерии.Вставить("ДатаПроизводства", ?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Серия),ВыборкаДетальныеЗаписи.Серия.ДатаПроизводства,"")); 
		СтруктураJson.Вставить("Характеристика",?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Характеристика),СтруктураХарактеристики,""));
		СтруктураJson.Вставить("Серия",?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Серия),СтруктураСерии,""));
		СтруктураJson.Вставить("СертификатНоменклатуры",?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.СертификатНоменклатуры),ВыборкаДетальныеЗаписи.СертификатНоменклатуры.ПолучитьОбъект(),""));
		Сообщение = СериализованныйОбъект(СтруктураJson);
		МассивСообщений.Добавить(Сообщение);		
	КонецЦикла;
	
	
</v8:ПроцедураОбработки>
			</v8:Record>
		</v8:InformationRegisterRecordSet.TrierRabbitMQСинхронизируемыеОбъекты>
		<v8:InformationRegisterRecordSet.TrierRabbitMQСинхронизируемыеОбъекты>
			<v8:Filter>
				<FilterItem xmlns="http://v8.1c.ru/8.1/data/enterprise">
					<Name xsi:type="xs:string">ИмяТипаОбъекта</Name>
					<Value xsi:type="xs:string">CatalogRef.СертификатыНоменклатурыПрисоединенныеФайлы</Value>
				</FilterItem>
				<FilterItem xmlns="http://v8.1c.ru/8.1/data/enterprise">
					<Name xsi:type="xs:string">НаправлениеСинхронизации</Name>
					<Value xsi:type="v8:EnumRef.TrierRabbitMQПеречислениеНаправленияСинхронизации">Входящая</Value>
				</FilterItem>
			</v8:Filter>
			<v8:Record>
				<v8:ИмяТипаОбъекта>CatalogRef.СертификатыНоменклатурыПрисоединенныеФайлы</v8:ИмяТипаОбъекта>
				<v8:НаправлениеСинхронизации>Входящая</v8:НаправлениеСинхронизации>
				<v8:КлючМаршрутизации/>
				<v8:ТочкаОбмена>CertificatesTest</v8:ТочкаОбмена>
				<v8:ПроцедураОбработки>НоменклатураСсылка = Справочники.Номенклатура.НайтиПоКоду(Данные.Номенклатура);
	Если НЕ НоменклатураСсылка.Пустая() Тогда

	//Если Не ЗначениеЗаполнено(Данные.СертификатНоменклатуры.Ссылка) Тогда
            Данные.СертификатНоменклатуры.ДополнительныеСвойства.Вставить("НеОтправлятьКролику", Истина);
		Данные.СертификатНоменклатуры.Записать();		
	//КонецЕсли;
	
	//Если Не ЗначениеЗаполнено(Данные.ПрисоединенныйФайл.Ссылка) Тогда
             Данные.ПрисоединенныйФайл.Автор = ПараметрыСеанса.ТекущийПользователь;
            Данные.ПрисоединенныйФайл.ДополнительныеСвойства.Вставить("НеОтправлятьКролику", Истина);
		Данные.ПрисоединенныйФайл.Записать();	
             Данные.ПрисоединенныйФайл.Редактирует = Справочники.Пользователи.ПустаяСсылка();	
	//КонецЕсли;
	
	ОбластьДействия = РегистрыСведений.ОбластиДействияСертификатовНоменклатуры.СоздатьМенеджерЗаписи();	
	ОбластьДействия.ВидНоменклатуры = Справочники.ВидыНоменклатуры.НайтиПоНаименованию(Данные.ВидНоменклатуры);
	ОбластьДействия.Номенклатура    = НоменклатураСсылка;
	ОбластьДействия.СертификатНоменклатуры = Данные.СертификатНоменклатуры.Ссылка;
	ОбластьДействия.Записать(Истина);
КонецЕсли;</v8:ПроцедураОбработки>
			</v8:Record>
		</v8:InformationRegisterRecordSet.TrierRabbitMQСинхронизируемыеОбъекты>
		<v8:InformationRegisterRecordSet.TrierRabbitMQСинхронизируемыеОбъекты>
			<v8:Filter>
				<FilterItem xmlns="http://v8.1c.ru/8.1/data/enterprise">
					<Name xsi:type="xs:string">ИмяТипаОбъекта</Name>
					<Value xsi:type="xs:string">CatalogRef.СертификатыНоменклатурыПрисоединенныеФайлы</Value>
				</FilterItem>
				<FilterItem xmlns="http://v8.1c.ru/8.1/data/enterprise">
					<Name xsi:type="xs:string">НаправлениеСинхронизации</Name>
					<Value xsi:type="v8:EnumRef.TrierRabbitMQПеречислениеНаправленияСинхронизации">Исходящая</Value>
				</FilterItem>
			</v8:Filter>
			<v8:Record>
				<v8:ИмяТипаОбъекта>CatalogRef.СертификатыНоменклатурыПрисоединенныеФайлы</v8:ИмяТипаОбъекта>
				<v8:НаправлениеСинхронизации>Исходящая</v8:НаправлениеСинхронизации>
				<v8:КлючМаршрутизации/>
				<v8:ТочкаОбмена>CertificatesTest</v8:ТочкаОбмена>
				<v8:ПроцедураОбработки>Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
      |	ОбластиДействияСертификатовНоменклатуры.ВидНоменклатуры КАК ВидНоменклатуры,
      |	ОбластиДействияСертификатовНоменклатуры.Номенклатура КАК Номенклатура,
      |	ОбластиДействияСертификатовНоменклатуры.Характеристика КАК Характеристика,
      |	ОбластиДействияСертификатовНоменклатуры.Серия КАК Серия,
      |	ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры КАК СертификатНоменклатуры,
      |	СертификатыНоменклатурыПрисоединенныеФайлы.Ссылка КАК ПрисоединенныйФайл
      |ИЗ
      |	Справочник.СертификатыНоменклатурыПрисоединенныеФайлы КАК СертификатыНоменклатурыПрисоединенныеФайлы
      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбластиДействияСертификатовНоменклатуры КАК ОбластиДействияСертификатовНоменклатуры
      |		ПО (СертификатыНоменклатурыПрисоединенныеФайлы.ВладелецФайла = ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры.Ссылка)
      |ГДЕ
      |	СертификатыНоменклатурыПрисоединенныеФайлы.Ссылка В(&amp;ПрисоединенныеФайлы)";
	
	Запрос.УстановитьПараметр("ПрисоединенныеФайлы", Объект);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СтруктураJson = Новый Структура;
            ГруппаДоступаНаименование = ?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Номенклатура),ВыборкаДетальныеЗаписи.Номенклатура.ГруппаДоступа.Наименование,"");
            КлючМаршрутизации = СтрЗаменить(ГруппаДоступаНаименование,"-",".");
            Если ЗначениеЗаполнено(КлючМаршрутизации) Тогда
	      КлючиОтправки.КлючМаршрутизации = КлючМаршрутизации;
            КонецЕсли;
            СтруктураJson.Вставить("ИмяТипаОбъекта", XMLТип(ВыборкаОбъектыКОтправке.ТипЗначения).ИмяТипа);
		СтруктураJson.Вставить("ВидНоменклатуры", ВыборкаДетальныеЗаписи.ВидНоменклатуры.Наименование);
		СтруктураJson.Вставить("Номенклатура",?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Номенклатура),ВыборкаДетальныеЗаписи.Номенклатура.Код,""));
		СтруктураХарактеристики = Новый Структура;
            СтруктураХарактеристики.Вставить("Наименование", ?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Характеристика),ВыборкаДетальныеЗаписи.Характеристика.Наименование,""));
            СтруктураХарактеристики.Вставить("УникальныйИдентификатор", ?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Характеристика),ВыборкаДетальныеЗаписи.Характеристика.УникальныйИдентификатор(),""));
            СтруктураСерии = Новый Структура;
            СтруктураСерии.Вставить("Наименование", ?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Серия),ВыборкаДетальныеЗаписи.Серия.Наименование,""));
            СтруктураСерии.Вставить("УникальныйИдентификатор", ?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Серия),ВыборкаДетальныеЗаписи.Серия.УникальныйИдентификатор(),"")); 
            СтруктураСерии.Вставить("ДатаПроизводства", ?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Серия),ВыборкаДетальныеЗаписи.Серия.ДатаПроизводства,"")); 
		СтруктураJson.Вставить("Характеристика",?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Характеристика),СтруктураХарактеристики,""));
		СтруктураJson.Вставить("Серия",?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Серия),СтруктураСерии,""));
		СтруктураJson.Вставить("СертификатНоменклатуры",?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.СертификатНоменклатуры),ВыборкаДетальныеЗаписи.СертификатНоменклатуры.ПолучитьОбъект(),""));	
		СтруктураJson.Вставить("ПрисоединенныйФайл",?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ПрисоединенныйФайл),ВыборкаДетальныеЗаписи.ПрисоединенныйФайл.ПолучитьОбъект(),""));
		Сообщение = СериализованныйОбъект(СтруктураJson);
		МассивСообщений.Добавить(Сообщение);		
	КонецЦикла;
	
	</v8:ПроцедураОбработки>
			</v8:Record>
		</v8:InformationRegisterRecordSet.TrierRabbitMQСинхронизируемыеОбъекты>
	</V8Exch:Data>
	<PredefinedData/>
</V8Exch:_1CV8DtUD>